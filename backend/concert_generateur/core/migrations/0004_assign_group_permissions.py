# Generated by Django 5.2 on 2025-04-11 12:14

from django.db import migrations


def assign_group_permissions(apps, schema_editor):
    # Récupérer les modèles via le système de migrations
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Mapping des groupes et des permissions à attribuer
    group_permissions = {
        "Artist Group": [
            "can_view_dashboard"
        ],
        "Organizer Group": [
            # Country
            "view_country",
            # Country Demographics
            "view_countrydemographics",
            # Concert Hall
            "view_concerthall",
            # Test
            "can_view_dashboard"
        ],
        "Admin Group": [
            # Custom User
            "add_customuser",
            "change_customuser",
            "delete_customuser",
            "view_customuser",
            # Concert Hall
            "add_concerthall",
            "change_concerthall",
            "delete_concerthall",
            "view_concerthall",
            # Country Demographics
            "add_countrydemographics",
            "change_countrydemographics",
            "delete_countrydemographics",
            "view_countrydemographics",
            # Country
            "add_country",
            "change_country",
            "delete_country",
            "view_country",
            # Test
            "can_view_dashboard"
        ],
    }

    for group_name, perm_codenames in group_permissions.items():
        try:
            group = Group.objects.get(name=group_name)
        except Group.DoesNotExist:
            # Si le groupe n'existe pas, passe au suivant
            continue

        for perm_codename in perm_codenames:
            try:
                # On précise que la permission vient de l'app 'core'
                permission = Permission.objects.get(codename=perm_codename, content_type__app_label="core")
                group.permissions.add(permission)
            except Permission.DoesNotExist:
                # Si la permission n'existe pas encore, on peut la logger ou ignorer
                continue


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0003_create_user_groups"),
    ]

    operations = [
        migrations.RunPython(assign_group_permissions, reverse_code=migrations.RunPython.noop)
    ]
